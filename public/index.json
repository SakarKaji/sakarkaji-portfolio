[{"content":"Intro Ayomomo is a web-based platform built for a modern Nepali restaurant that specializes in authentic dumplings (momos). The project aims to bring traditional cuisine into the digital space with a fast, scalable, and cleanly designed web presence. It showcases brand identity while also laying the foundation for future features like online ordering, reservations, and customer profiles.\nüõ† Tech Stack Backend: Django (Python), Django REST Framework Frontend: HTML, Tailwind CSS (with Django templates) Task Queue: Celery + Redis (for background jobs) Deployment: Docker, GitHub Actions CI/CD Cloud Services: AWS EC2 (hosted backend), S3 (for static/media files), CloudFront (CDN) Database: PostgreSQL (via AWS RDS) Authentication: Django Auth with session management ‚öôÔ∏è How It Works Home Page: Clean and responsive layout that introduces the brand and food concept Authentication: Users can sign up and log in securely using Django\u0026rsquo;s built-in auth system FAQ \u0026amp; About Us: Static pages rendered via Django templates to inform users Scalability: Cloud-native setup using AWS EC2 and S3; Dockerized backend with automatic CI/CD via GitHub Actions Performance: CloudFront used as a CDN to deliver static assets globally with low latency Background Processing: Celery handles asynchronous tasks (e.g., image optimization, email jobs) üöÄ Final Thoughts Ayomomo was a full-stack project that helped me bring together modern web development skills‚Äîfrom backend architecture to cloud deployment. I gained hands-on experience with DevOps (CI/CD), asynchronous task management, and scalable application design.\nThis project reflects my ability to:\nBuild and deploy a production-ready backend system Architect cloud-based, scalable infrastructure Combine clean design with performance-first development practices Next steps could include:\nImplementing a real-time order management system Integrating Stripe or Khalti for online payments Building a mobile-first frontend using React or Next.js ","permalink":"http://localhost:1313/projects/ayomomo/","summary":"Intro Ayomomo is a web-based platform built for a modern Nepali restaurant that specializes in authentic dumplings (momos). The project aims to bring traditional cuisine into the digital space with a fast, scalable, and cleanly designed web presence. It showcases brand identity while also laying the foundation for future features like online ordering, reservations, and customer profiles.\nüõ† Tech Stack Backend: Django (Python), Django REST Framework Frontend: HTML, Tailwind CSS (with Django templates) Task Queue: Celery + Redis (for background jobs) Deployment: Docker, GitHub Actions CI/CD Cloud Services: AWS EC2 (hosted backend), S3 (for static/media files), CloudFront (CDN) Database: PostgreSQL (via AWS RDS) Authentication: Django Auth with session management ‚öôÔ∏è How It Works Home Page: Clean and responsive layout that introduces the brand and food concept Authentication: Users can sign up and log in securely using Django\u0026rsquo;s built-in auth system FAQ \u0026amp; About Us: Static pages rendered via Django templates to inform users Scalability: Cloud-native setup using AWS EC2 and S3; Dockerized backend with automatic CI/CD via GitHub Actions Performance: CloudFront used as a CDN to deliver static assets globally with low latency Background Processing: Celery handles asynchronous tasks (e.","title":"Ayomomo"},{"content":"Intro The project Bizzyone delivers a comprehensive, multi-platform system that seamlessly connects buyers, sellers, and agents, while enabling super admin and manager to manage and moderate the platform.\n","permalink":"http://localhost:1313/projects/bizzyone/","summary":"Intro The project Bizzyone delivers a comprehensive, multi-platform system that seamlessly connects buyers, sellers, and agents, while enabling super admin and manager to manage and moderate the platform.","title":"Bizzyone"},{"content":"Intro The project Thinkmart, is an online grocery and essentials marketplace focused on Australian customers. It offers daily deals, bulk items, fresh produce, pantry staples, and household products ‚Äî all available fo\n","permalink":"http://localhost:1313/projects/thinkmart/","summary":"Intro The project Thinkmart, is an online grocery and essentials marketplace focused on Australian customers. It offers daily deals, bulk items, fresh produce, pantry staples, and household products ‚Äî all available fo","title":"Thinkmart"},{"content":"Intro QuickSamachar is a multilingual news delivery platform built to aggregate real-time content from major Nepali and Indian news sources. Designed for speed, scalability, and accessibility, it provides users with curated articles, daily horoscopes, and short video updates ‚Äî all delivered through a modern, cloud-powered backend.\n","permalink":"http://localhost:1313/projects/quicksamachar/","summary":"Intro QuickSamachar is a multilingual news delivery platform built to aggregate real-time content from major Nepali and Indian news sources. Designed for speed, scalability, and accessibility, it provides users with curated articles, daily horoscopes, and short video updates ‚Äî all delivered through a modern, cloud-powered backend.","title":"QuickSamachar"},{"content":"Intro Education is one of the most important aspects of human development, greatly influencing the path of professional development and success. To a higher degree, the quality and effectiveness of the learning depends on student motivation and involvement. Sometimes, there are too many problems with students in classes such as not enough time finishing their studies or courses. Students also find it hard to manage their study time, which can lead to them quitting or not doing well in school. This is where a virtual assistant like voice assistant can be useful. Voice assistants are devices or applications that use voice recognition technology, natural language processing, and AI to respond to people. Initially, virtual assistants referred to online support professionals. The process of a voice assistant involves three steps: converting speech to text, understanding the meaning of the text, and taking action accordingly. His framework serves as the basis for effectively communicating with users in natural language. Our voice assistant system is an early attempt to use them for educational purposes. This system provides a simple voice response interface without the need for the users to find information in complex web pages or app menus. With the help of this system, students can quickly access their coursework information.\n","permalink":"http://localhost:1313/projects/ai-enabled-voice-assistant/","summary":"Intro Education is one of the most important aspects of human development, greatly influencing the path of professional development and success. To a higher degree, the quality and effectiveness of the learning depends on student motivation and involvement. Sometimes, there are too many problems with students in classes such as not enough time finishing their studies or courses. Students also find it hard to manage their study time, which can lead to them quitting or not doing well in school.","title":"AI enabled voice assistant"},{"content":"Description Designing backend systems that are fast, scalable, and built for impact.\n","permalink":"http://localhost:1313/experience/software_engineer/","summary":"Description Designing backend systems that are fast, scalable, and built for impact.","title":"Software Engineer"},{"content":"Description Engineered a scalable Django backend for a news application, utilizing Django REST Framework (DRF) to create RESTful APIs for seamless interaction between the frontend and backend.\nDeveloped multiple web scraping projects to collect news from different portals across Nepal and India, ensuring up-to-date news data collection for the platform.\nIntegrated AWS services, including RDS for PostgreSQL, S3 for media storage, and CloudFront for serving S3 content, enhancing scalability and content delivery performance.\nImplemented a multilingual Text-to-Speech(TTS) system for reading news in Nepali and English, enhancing accessibility and user engagement.\n","permalink":"http://localhost:1313/experience/associate/","summary":"Description Engineered a scalable Django backend for a news application, utilizing Django REST Framework (DRF) to create RESTful APIs for seamless interaction between the frontend and backend.\nDeveloped multiple web scraping projects to collect news from different portals across Nepal and India, ensuring up-to-date news data collection for the platform.\nIntegrated AWS services, including RDS for PostgreSQL, S3 for media storage, and CloudFront for serving S3 content, enhancing scalability and content delivery performance.","title":"Associate Software Engineer"},{"content":"Description Conducted extensive research on Large Language Models (LLMs) to determine the most effective models for specific use cases, performance and efficiency.\nExplored and implemented diverse embedding models, significantly enhancing overall accuracy and relevance of information in retrieval tasks.\nUtilized Qdrant for efficient storage and retrieval of vector embeddings, improving the performance of the Retrieval Augmented Generation (RAG) pipeline.\nDesigned and fine-tuned prompts, ensuring high-quality, contextually accurate and high-quality responses tailored to diverse use cases.\n","permalink":"http://localhost:1313/experience/intern/","summary":"Description Conducted extensive research on Large Language Models (LLMs) to determine the most effective models for specific use cases, performance and efficiency.\nExplored and implemented diverse embedding models, significantly enhancing overall accuracy and relevance of information in retrieval tasks.\nUtilized Qdrant for efficient storage and retrieval of vector embeddings, improving the performance of the Retrieval Augmented Generation (RAG) pipeline.\nDesigned and fine-tuned prompts, ensuring high-quality, contextually accurate and high-quality responses tailored to diverse use cases.","title":"Python Developer Intern (LLM)"},{"content":"","permalink":"http://localhost:1313/blog/digitalocean-flask/","summary":"","title":"Connnect DigitalOcean with Flask "}]